Here I will show the steps that were taken to create my IDS/SIEM integration project that allowed for further understanding of not only IDS/IPS systems as well as SIEM solutions, but also IoT devices.

It all starts with the decision of the IoT device, in which case I decided upon the Raspberry Pi Model 4b. This, while being a decently capable system is also able to provide a decent comparison to other IoT devices. Furthermore, an Intrusion Detection System is required, in the case of this project I utilized Zeek, as not only can it collect logs to we will later integrate into our SIEM solution, but it can also work as a standalone IDS and can be configured to run solely on the device. This, coupled with the SIEM solution, in this case I used the ElasticStack, will allow for careful analysis of all the logs that are being sent by our IoT device and can even provide Intrusion Detection abilities via both the SIEM and the log system itself. 

In the case of the Raspberry Pi Model 4b, the initial setup was the main problem in attempting to conduct this project. This is due to the fact that, while very easy to utilize, there is not as much support as a traditional system. Orginally, I tried to use the Raspberry Pi OS Lite to accomplish the project, however after multiple attempts at installing the IDS system on it and frequent errors, I was forced to switch to a different operating system with more support. It seems that while Raspberry Pi OS Lite is able to do basic OS functions and even work as a thin client, it is unable to handle the necessities of the IDS. In turn, Ubuntu 20.04 lts was installed. Afterwards, the device was configured to allow SSH connectivity as well as other system settings.

The Intrusion Detection System, Zeek, was then installed. It was configured to create logs for the device and then it was started by running zeekctl. This allowed to run the IDS itself and, while it had the capability to run anomalous intrusion detection on its own, we paired with ElasticStack so as to provide a more cloud based method of intrusion detection as it would allow for continous monitoring of the device.

After we started to configure ElasticStack, we installed a sensor on the IoT device to be able to send logs to the SIEM so as to analyze these logs whenever they arrive to practice configuration and mild incident response. I then configured the rules for the SIEM to detect any unsuccessful login attempts in an anomalistic manner. This rule, however does not function by itself. This is because it requires machine learning to trigger the anomalistic detection. Due to this, we must activate the machine learning capabilities on the SIEM which is an additional cost, but it is not much more than the base payment. This, combined with the detection rule, plus some other rule-based detection rules will allow us to detect an intrusion that occurs within the device. 

Lastly, we have to test these different rules individually to make sure that they actually pick up on the intrusions. For more rule-based detections, I simply utilized my kali linux virtual machine to attempt to trigger those rules. These for the most part worked, with some rules being the exception. These rules are still being configured on the SIEM end to make sure they trigger correctly. As far as the anomalistic detection rule, however that did end up working. I had to set a general behavior when utilizing the device, so I spent two weeks utilizing the device in a normal user scenario to provide that data. I then utilized my Kali Linux machine and opened up Hydra to attempt a brute force attempt so as to trigger the anomaly alert set by the rule. After 30 minutes, the rule picked up this anomaly and alerted in the SIEM so as to inform me and allow me to choose the next steps to resolve it.

Overall, there are various things I ended up learning during this process, including how to setup Intrusion Detections Systems and how to configure a System Information and Event Management to work properly when applying it to an Internet of Things device. This also allowed me to further improve my redteam abilities as I was able to conduct some penetration testing against the IoT device and try to trigger some of the rules that were implemented for detection. I will continue to utilize this system as it will allow me to not only further improve my skills, but the technology that I have utilized for this project are very intriguing to me and I would like to learn more about them.
